/*
Me: So, imagine I declare a map like this.

var m1 map[string]int

Then I can initialize as follows:

var m2 map[string]int = map[string]int{"a": 1}

Now, if we initialize as follows:

m3 := map[string]int{
    "a": 1,
    "a1": 2,
}

As the docs say, Map literals are like struct literals, but the keys are required.

Finally, if the top-level type is just a type name, you can omit it from the elements of the literal.

type Vertex struct {
	Lat, Long float64
}

var m = map[string]Vertex{
	"Bell Labs": {40.68433, -74.39967},
	"Google":    {37.42202, -122.08408},
}


*/