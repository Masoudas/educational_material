Consider the following table:

$ CREATE TABLE items (
	ID serial PRIMARY KEY,
	product VARCHAR (100) NOT NULL,
	price NUMERIC NOT NULL,
	discount NUMERIC
);

There are four fields in the items table:
    -   id: the primary key that identifies the item in the items table.
    -   product: the product name.
    -   price: the price of the product.
    -   discount: the discount of the product.

Second, we insert some records into the items table using INSERT statement as follows:
$ INSERT INTO items (product, price, discount)
VALUES
	('A', 1000 ,10),
	('B', 1500 ,20),
	('C', 800 ,5),
	('D', 500, NULL);

Third, we query the net prices of the products using the following formula:
$ net_price = price - discount;

$ SELECT
	product,
	(price - discount) AS net_price
FROM
	items;

If you look at the fourth row, you will notice that the net price of the product D is null which seems not correct. The issue is the discount of the product D is null, therefore when we take the null value to calculate the net price, PostgreSQL returns null. This, however, solves the problem:

SELECT
	product,
	(price - COALESCE(discount,0)) AS net_price
FROM
	items;
