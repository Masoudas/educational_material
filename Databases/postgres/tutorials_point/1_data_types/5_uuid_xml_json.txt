A UUID (Universally Unique Identifiers) is written as a sequence of lower-case hexadecimal digits, in several groups separated by hyphens, specifically a group of eight digits, followed by three groups of four digits, followed by a group of 12 digits, for a total of 32 digits representing the 128 bits.

An example of a UUID is − 550e8400-e29b-41d4-a716-446655440000

XML Type
    The XML data type can be used to store XML data. For storing XML data, first you have to create XML values using the function xmlparse as follows −

JSON Type
    The json data type can be used to store JSON (JavaScript Object Notation) data. Such data can also be stored as text, but the json data type has the advantage of checking that each stored value is a valid JSON value. There are also related support functions available, which can be used directly to handle JSON data type as follows.

    array_to_json('{{1,5},{99,100}}'::int[])	[[1,5],[99,100]]
    row_to_json(row(1,'foo'))	{"f1":1,"f2":"foo"}