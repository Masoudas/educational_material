The official docs say:

QGuiApplication contains the main event loop, where all events from the window system and other sources are 
processed and dispatched. It also handles the application's initialization and finalization, and provides 
session management. In addition, QGuiApplication handles most of the system-wide and application-wide settings.

For any GUI application using Qt, there is precisely one QGuiApplication object no matter whether the 
application has 0, 1, 2 or more windows at any given time. For non-GUI Qt applications, use QCoreApplication 
instead, as it does not depend on the Qt GUI module. For QWidget based Qt applications, use QApplication instead, 
as it provides some functionality needed for creating QWidget instances.

The QGuiApplication object is accessible through the instance() function, which returns a pointer equivalent to 
the global qApp pointer.

QGuiApplication's main areas of responsibility are:

    -   It initializes the application with the user's desktop settings, such as palette(), font() and 
        styleHints(). It keeps track of these properties in case the user changes the desktop globally, 
        for example, through some kind of control panel.
    -   It performs event handling, meaning that it receives events from the underlying window system and 
        dispatches them to the relevant widgets. You can send your own events to windows by using sendEvent() 
        and postEvent().
    -   It parsQGuiApplication contains the main event loop, where all events from the window system and other 
        sources are processed and dispatched. It also handles the application's initialization and finalization, 
        and provides session management. In addition, QGuiApplication handles most of the system-wide and 
        application-wide settings.

For any GUI application using Qt, there is precisely one QGuiApplication object no matter whether the application 
has 0, 1, 2 or more windows at any given time. For non-GUI Qt applications, use QCoreApplication instead, as it 
does not depend on the Qt GUI module. For QWidget based Qt applications, use QApplication instead, as it 
provides some functionality needed for creating QWidget instances.

The QGuiApplication object is accessible through the instance() function, which returns a pointer equivalent to 
the global qApp pointer.
