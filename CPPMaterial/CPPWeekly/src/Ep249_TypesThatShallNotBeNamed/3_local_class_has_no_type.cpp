/**
* Another type that can't be named is a local class, which is for example defined inside a function scope.
* It's quite interesting that we can return this type, which shows that the compiler keeps track of the type
* and with auto return, creates another type of that class. 
* 
* When check the typeid function the actual name of the class generated by the compiler. 
*/
#include <iostream>

auto local_class() {
	struct S{};

	S s = {};
	return s;
}

//int main() {
//	auto c = local_class();
//
//	std::cout << typeid(c).name();
//}