    -   CXX_EXTENSIONS:
Boolean specifying whether compiler specific extensions are requested.
This property specifies whether compiler specific extensions should be used. For some compilers, this results 
in adding a flag such as -std=gnu++11 instead of -std=c++11 to the compile line. This property is ON by 
default. The basic C++ standard level is controlled by the CXX_STANDARD target property.

    -   CXX_STANDARD
This property specifies the C++ standard whose features are requested to build this target. For some compilers, 
this results in adding a flag such as -std=gnu++11 to the compile line. For compilers that have no notion of 
a standard level, such as Microsoft Visual C++ before 2015 Update 3, this has no effect.

Supported values are 98, 11, 14, 17, 20, 23.

If the value requested does not result in a compile flag being added for the compiler in use, a previous standard 
flag will be added instead. This means that using:

set_property(TARGET tgt PROPERTY CXX_STANDARD 11)

with a compiler which does not support -std=gnu++11 or an equivalent flag will not result in an error or warning, 
but will instead add the -std=gnu++98 flag if supported. This "decay" behavior may be controlled with the 
CXX_STANDARD_REQUIRED target property. Additionally, the CXX_EXTENSIONS target property may be used to control 
whether compiler-specific extensions are enabled on a per-target basis.

    -   CXX_STANDARD_REQUIRED
If this property is set to ON, then the value of the CXX_STANDARD target property is treated as a requirement. 
If this property is OFF or unset, the CXX_STANDARD target property is treated as optional and may "decay" to a 
previous standard if the requested is not available. For compilers that have no notion of a standard level, such 
as MSVC 1800 (Visual Studio 2013) and lower, this has no effect.

    - POSITION_INDEPENDENT_CODE
The POSITION_INDEPENDENT_CODE property determines whether position independent executables or shared libraries 
will be created. This property is True by default for SHARED and MODULE library targets and False otherwise. 
This property is initialized by the value of the CMAKE_POSITION_INDEPENDENT_CODE variable if it is set when a 
target is created.