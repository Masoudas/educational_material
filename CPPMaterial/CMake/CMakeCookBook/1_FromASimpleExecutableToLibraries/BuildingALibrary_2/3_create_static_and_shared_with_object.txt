In this receipe, we shall create both shared and static libraris, but this time using the object library:

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
cmake_minimum_required(VERSION 3.5 FATAL_ERROR)
project(recipe-03 LANGUAGES CXX)

add_library(message-objs OBJECT Message.hpp Message.cpp)

# this is only needed for older compilers but doesn't hurt either to have it
set_target_properties(message-objs 
  PROPERTIES
    POSITION_INDEPENDENT_CODE 1
  )

add_library(message-shared SHARED $<TARGET_OBJECTS:message-objs>)   # Generator expression of target
add_library(message-static STATIC $<TARGET_OBJECTS:message-objs>)

add_executable(hello-world hello-world.cpp)
target_link_libraries(hello-world message-static)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Note: The need to explicitly set the POSITION_INDEPENDENT_CODE property for the target might only arise on 
certain platforms and/or using older compilers.

It is important to note the generator expression syntax used to refer to the object library: 
$<TARGET_OBJECTS:message-objs>. Generator expressions are constructs that CMake evaluates at generation time, 
right after configuration time, to produce configuration-specific build output


