So when trying to link against a library, we either:
    -   Have a library together with an inclusion and a link path
    -   Have a cmake library that contains a <PACKAGE>.cmake file.

Here, we shall discuss the second version.

The command find_package finds a cmake package for us and includes it in the project. The official documentation states:

In Module mode, CMake searches for a file called Find<PackageName>.cmake. The file is first searched in the CMAKE_MODULE_PATH, then among the 
Find Modules provided by the CMake installation. If the file is found, it is read and processed by CMake. It is responsible for finding the 
package, checking the version, and producing any needed messages. Some find-modules provide limited or no support for versioning; check the 
module documentation.

The signature of the function is:

find_package(<PackageName> [version] [EXACT] [QUIET] [MODULE]
             [REQUIRED] [[COMPONENTS] [components...]]
             [OPTIONAL_COMPONENTS components...]
             [NO_POLICY_SCOPE])
find_package(<PackageName> PATHS paths... NO_DEFAULT_PATH)  # To include paths

Whenever the package is loaded, the variable <PackageName>_FOUND is set to true to indiacte that the package has been found.
The REQUIRED option stops processing with an error message if the package cannot be found.
