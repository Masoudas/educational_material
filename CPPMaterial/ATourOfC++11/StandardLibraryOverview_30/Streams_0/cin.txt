With cin, we can put values inside any type that supports the stream operator overload.
Note how an int is set, or any other type. This of course is very dangerous, but in any case.

The command line stops on the enter.

int t;
cin >> t;

char c;
cin >> c;	Note that here only the first char is set, and then nothing else is set there. If for example enter is pressed before
		assigning a char, cin waits till we put an actuall carachter.

string str;
cin >> str;

We can also say:
cin >> str;

We can also say
cin >> a >> b;	Two variables are set either using space, tab or enter.

We normally prefer to use getline(cin, str) to get a line from the command line.

Something that's important about cout<< is that the order of execution is from right to left. This is because 
the << operator runs from right I guess. So for example say you have a stack like {1, 2}, writing
cout << "First " << s.pop() << " Second " << s.pop(); pops First = 1 and Second = 2. So be cautious!