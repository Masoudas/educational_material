Create a tasks.json file to tell VS Code how to build (compile) the program. This task will invoke the g++ compiler 
to create an executable file from the source code.

Now, note that VS code is not wizardry, and we need to include the gcc options for it compile our code. We can pass
these options in the "args" field to gcc. The most important ones that we do are:

  - "-g"
    This option in gcc means debug mode. Hence, if we're building in the debug mode, we pass it.

  - "-o":
    This determines the path of generated BINARY (not object files.) The default value for this field is 
    "${fileDirname}/${fileBasenameNoExtension}." Hence, every generated binary would be in the same folder as the
    file we put the main in. This would be messy, and to avoid it, we make a build folder and define the path to
    build as that (usually as "-o", "${workspaceFolder}/build/${fileBasenameNoExtension}")

  - "-L":
    To define linkeage to a particular static or dynamic library, we use the -L option. If we don't do it, the gcc
    linkear "or ld" would complain about not finding symbols. Note we need to be particular and specify the actuall
    files. Just writing the path to the folder does not help. Suppose for example that we have lib1.so in 
    "/usr/local/lib". We need to write "/usr/local/lib/lib1.so" or something like "usr/local/lib/lib*". Otherwise,
    the linker would complain.

  - "-I":
    We define inclusion paths with this option for header files. It does seem to work fine with just inserting the
    path to the folder.

  - "-std":
    Even though we define the std in c_cpp_config.json, I think it would be nice to define it here too. use "-std"
    then "c++xx".

An example of such a file is given below, where we've modified it to include dlls of opencv:

{
  "tasks": [
        {
            "type": "cppbuild",
            "label": "C/C++: g++ build active file",
            "command": "/usr/bin/g++",
            "args": [
                "-g",
                "${file}",
                "-o",
                "${workspaceFolder}/build/${fileBasenameNoExtension}",
                "-I", "/usr/local/include/opencv4",
                "-L", "/usr/local/lib/lib*",
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task generated by Debugger."
        }
    ],
    "version": "2.0.0"
}