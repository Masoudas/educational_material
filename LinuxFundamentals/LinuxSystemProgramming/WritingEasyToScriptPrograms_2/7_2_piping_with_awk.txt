Now, consider the following text file called avg.txt

10-minute average: 61 mph
30-minute average: 55 mph
45-minute average: 54 mph
60-minute average: 52 mph
90-minute average: 52 mph
99-minute average: nn mph

We can use awk to get the third column, and then process it with our previous program:

$ awk '{ print $3 }' avg.txt | ./mph_to_kph 2>/dev/null # To pass errors to stderr

Question: What do you think this program returns? Well, because the last input is an error, it returns 1.
However, if we change the last two lines, it once again returns 1 as well. This implies that the pipe calls
our program once, and passes everything on the command line to it. Hence, we should be careful, particularly
with the while loop, to process everything on the command line.

We can also get more advernturous with our pipe as follows:
$ awk '{ print $3 }' avg.txt | ./mph_to_kph 2>/dev/null | sed 's/$/kp\/h/'